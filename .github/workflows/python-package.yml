# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        # add additional test requirements.
        # NOTE: automate this with a txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Start minikube
      uses: medyagh/setup-minikube@master
      
    - name: Deploy FaaS
      run: |
        git clone https://github.com/openfaas/faas-netes/
        minikube kubectl apply -f faas-netes/namespaces.yml
        minikube kubectl apply -f faas-netes/yaml
        minikube kubectl -n openfaas create secret generic basic-auth --from-literal=basic-auth-user=admin --from-literal=basic-auth-password=1234
        minikube kubectl port-forward svc/gateway 8080:8080 -n openfaas &
    - name: Set-up faas-cli
      run: |
        curl -sSL https://cli.openfaas.com | sudo -E sh
    - name: Deploy Test functions on FaaS   
      run: |
        faas store deploy cows
        faas store deploy env
        faas store deploy nodeinfo
        faas store deploy nslookup
        faas store deploy shasum
    - name: Test with unittest
      run: |
        ./tests/run.sh
